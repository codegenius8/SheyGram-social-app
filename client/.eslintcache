[{"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/index.js":"1","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/App.js":"2","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/store.js":"3","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/AddPost.js":"4","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Profile.js":"5","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Home.js":"6","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/AllUsers.js":"7","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Login.js":"8","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/EditProfile.js":"9","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Register.js":"10","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/action/postAction.js":"11","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/action/userAction.js":"12","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/reducers/postReducers.js":"13","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/reducers/alertsReducers.js":"14","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/reducers/usersReducer.js":"15","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Components/DefaultLayout.js":"16","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Components/Posts.js":"17"},{"size":264,"mtime":1652776968739,"results":"18","hashOfConfig":"19"},{"size":2801,"mtime":1657871685281,"results":"20","hashOfConfig":"19"},{"size":770,"mtime":1652954198095,"results":"21","hashOfConfig":"19"},{"size":1692,"mtime":1653312628004,"results":"22","hashOfConfig":"19"},{"size":7183,"mtime":1657804999981,"results":"23","hashOfConfig":"19"},{"size":700,"mtime":1653312611060,"results":"24","hashOfConfig":"19"},{"size":4391,"mtime":1654242081063,"results":"25","hashOfConfig":"19"},{"size":1632,"mtime":1654246732894,"results":"26","hashOfConfig":"19"},{"size":2281,"mtime":1654665637727,"results":"27","hashOfConfig":"19"},{"size":1850,"mtime":1654246754338,"results":"28","hashOfConfig":"19"},{"size":3224,"mtime":1654663163441,"results":"29","hashOfConfig":"19"},{"size":3344,"mtime":1657871574257,"results":"30","hashOfConfig":"19"},{"size":283,"mtime":1652954248139,"results":"31","hashOfConfig":"19"},{"size":1078,"mtime":1654662869715,"results":"32","hashOfConfig":"19"},{"size":277,"mtime":1653390512376,"results":"33","hashOfConfig":"19"},{"size":2936,"mtime":1657872070735,"results":"34","hashOfConfig":"19"},{"size":5480,"mtime":1654662933866,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"98gi4i",{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/index.js",[],["75","76"],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/App.js",["77","78","79","80"],"import React, { useEffect,useState,useCallback } from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport AddPost from \"./pages/AddPost\";\nimport Home from \"./pages/Home\";\nimport Profile from \"./pages/Profile\";\nimport \"antd/dist/antd.css\";\nimport \"./App.css\";\nimport Login from \"./pages/Login\";\nimport Register from \"./pages/Register\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getAllPost } from \"./Redux/action/postAction\";\nimport { getAllUsers } from \"./Redux/action/userAction\";\nimport AllUsers from \"./pages/AllUsers\";\nimport EditProfile from \"./pages/EditProfile\";\nfunction App() {\n  const { loading, likeorunlikeloading } = useSelector(\n    (state) => state.alertsReducers\n  );\n  const dispatch = useDispatch();\n  const user = localStorage.getItem(\"user\");\n  const parsedUser = JSON.parse(user);\n  const [token, setToken] = useState(\"\");\n  const [expiration, setExpiration] = useState(\"\");\n\n  useEffect(() => {\n    if (user) {\n      // console.log(parsedUser._id)\n      dispatch(getAllPost());\n     \n    }\n  }, []);\n\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, []);\n\n\n\n  \n\n  useEffect(() => {\n    setToken(JSON.parse(localStorage.getItem(\"token\")));\n    setExpiration(new Date(new Date().getTime() + 1000 *60*60));\n  }, []);\n\n\n  const logout = useCallback(() => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"user\");\n    window.location.href=\"/\"\n  }, []);\n\n  let logoutTimer;\n  useEffect(() => {\n    if (token && expiration) {\n      const remainingTime =\n        new Date(expiration).getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, expiration]);\n\n  return (\n    <div>\n      {(loading || likeorunlikeloading) && (\n        <div className=\"spinner-border\" role=\"status\">\n          <span class=\"sr-only\">Loading...</span>\n        </div>\n      )}\n      <BrowserRouter>\n        <Routes>\n          <Route path=\"/login\" exact element={<Login />} />\n          <Route path=\"/register\" exact element={<Register />} />\n          <Route path=\"/\" exact element={token ? <Home /> : <Login />} />\n          <Route\n            path=\"/profile/:userId\"\n            exact\n            element={token ? <Profile /> : <Login />}\n          />\n          <Route\n            path=\"/addpost\"\n            exact\n            element={token ? <AddPost /> : <Login />}\n          />\n           <Route\n            path=\"/allUser\"\n            exact\n            element={token ? <AllUsers/> : <Login />}\n          />\n           <Route\n            path=\"/editprofile\"\n            exact\n            element={token ? <EditProfile/> : <Login />}\n          />\n        </Routes>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/store.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/AddPost.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Profile.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Home.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/AllUsers.js",["81"],"import { Button, Row, Col, Input } from \"antd\";\nimport moment from \"moment\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport DefaultLayout from \"../Components/DefaultLayout\";\nimport {\n  followUser,\n  getAllUsers,\n  UnfollowUser,\n} from \"../Redux/action/userAction\";\nimport { UserAddOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nconst AllUsers = () => {\n  const [searchKey, setsearchKey] = useState(\"\");\n  const { users } = useSelector((state) => state.userReducers);\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const dispatch = useDispatch();\n  const { followloading, unfollowloading } = useSelector(\n    (state) => state.alertsReducers\n  );\n  // console.log(\"currentUser\",currentUser);\n  // console.log(\"UsresList\",users);\n  useEffect(() => {\n    dispatch(getAllUsers());\n  }, [followloading, unfollowloading]);\n  return (\n    <DefaultLayout>\n      <div>\n        <Row justify=\"center\">\n          <Col lg={20} className=\"d-flex mt-3\">\n            <Input\n             className=\"search-users\"\n              onChange={(e) => setsearchKey(e.target.value)}\n              placeholder= \"Search users\"\n            />\n          </Col>\n        </Row>\n        <Row justify=\"center\" gutter={16} className=\"mt-5\">\n          {users &&\n            users\n              .filter((obj) =>\n                obj.username.toLowerCase().includes(searchKey.toLowerCase())\n              )\n              .map((user) => {\n                return (\n                  <>\n                    {currentUser._id !== user._id && (\n                      <Col lg={5} xs={24} className=\"text-left\">\n                        <div key={user._id} className=\"bs1 p-2\">\n                          {user.profilepicUrl === \"\" ? (\n                            <span className=\"profilepic1 d-flex align-items-center\">\n                              {user.username[0]}\n                            </span>\n                          ) : (\n                            <img\n                              src={user.profilepicUrl}\n                              alt=\"\"\n                              height=\"60\"\n                              width=\"60\"\n                            />\n                          )}\n                          <div>\n                            <Link to={`/profile/${user._id}`}>\n                              {user.username}\n                            </Link>\n                          </div>\n                          <p>{moment(user.createdAt).format(\"MMM DD yyyy\")}</p>\n                          {user.followers.find(\n                            (obj) => obj === currentUser._id\n                          ) ? (\n                            <div className=\"d-flex\">\n                              <Button icon={<CheckOutlined />}>\n                                Following\n                              </Button>\n                              <Button\n                                onClick={() =>\n                                  dispatch(\n                                    UnfollowUser({\n                                      currentUserId: currentUser._id,\n                                      receiverUserId: user._id,\n                                    })\n                                  )\n                                }\n                                className=\"ml-2\"\n                              >\n                                Unfollow\n                              </Button>\n                            </div>\n                          ) : (\n                            <Button\n                              icon={<UserAddOutlined />}\n                              onClick={() =>\n                                dispatch(\n                                  followUser({\n                                    currentUserId: currentUser._id,\n                                    receiverUserId: user._id,\n                                  })\n                                )\n                              }\n                            >\n                              Follow\n                            </Button>\n                          )}\n                        </div>\n                      </Col>\n                    )}\n                  </>\n                );\n              })}\n        </Row>\n      </div>\n    </DefaultLayout>\n  );\n};\n\nexport default AllUsers;\n","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Login.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/EditProfile.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/pages/Register.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/action/postAction.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/action/userAction.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/reducers/postReducers.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/reducers/alertsReducers.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Redux/reducers/usersReducer.js",[],"/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Components/DefaultLayout.js",["82","83"],"import { AutoComplete, Layout, Menu } from \"antd\";\nimport React from \"react\";\nimport {\n  MenuUnfoldOutlined,\n  MenuFoldOutlined,\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n  LogoutOutlined,\n  HomeOutlined,\n  PlusOutlined,\n  UsergroupAddOutlined\n} from \"@ant-design/icons\";\nimport \"./DefaultLayout.css\";\nimport { Link } from \"react-router-dom\";\n\nconst { Header, Sider, Content } = Layout;\n\nclass DefaultLayout extends React.Component {\n  state = {\n    collapsed: true,\n  };\n\n  toggle = () => {\n    this.setState({\n      collapsed: !this.state.collapsed,\n    });\n  };\n\n  render() {\n    const user=JSON.parse(localStorage.getItem('user'))\n    return (\n      <Layout>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background \"  style={{\n          position : \"sticky\",\n          top : 0,\n          left : 0,\n          width : \"100%\",\n          padding : 0, \n          zIndex : 9\n          \n        }}>\n           <div className=\"d-flex justify-content-between align-items-center bs1\">\n             <div className=\"d-flex align-item-cente\">\n             <UserOutlined />\n             <h6 className=\"pt-3\">{JSON.parse(localStorage.getItem('user')).username}</h6>\n             </div>\n               \n               <h2 className=\"logotext pt-1 \">SheyGram</h2>\n           {React.createElement(\n              this.state.collapsed ? MenuUnfoldOutlined : MenuFoldOutlined,\n              {\n                className: \"trigger\",\n                onClick: this.toggle,\n              }\n            )}\n           </div>\n          </Header>\n          <Content\n            className=\"site-layout-background\"\n            style={{\n            \n            }}\n          >\n            {this.props.children}\n          </Content>\n        </Layout>\n        <Sider style={{\n          position : \"sticky\",\n          top : 0,\n          bottom : 0,\n          overflow : \"auto\",\n          height : \"100vh\"\n        }}  trigger={null} collapsible collapsed={this.state.collapsed}>\n          <div className=\"logo\" />\n          <Menu theme=\"dark \" mode=\"inline\" defaultSelectedKeys={[\"1\"]}>\n            <Menu.Item key=\"/\" icon={<HomeOutlined />}>\n              <Link to=\"/\">Home</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/profile\" icon={<VideoCameraOutlined />}>\n              <Link to={`/profile/${user._id}`}>Profile</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/addpost\" icon={<PlusOutlined />}>\n              <Link to=\"/addpost\">AddPost</Link>\n            </Menu.Item>\n            <Menu.Item key=\"/allUser\" icon={<UsergroupAddOutlined />}>\n              <Link to=\"/allUser\">Alluser</Link>\n            </Menu.Item>\n            <Menu.Item icon={< LogoutOutlined/>}>\n              <Link to='' onClick={()=>{localStorage.clear(window.location.reload())}}>Logout</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n      </Layout>\n    );\n  }\n}\n\nexport default DefaultLayout;\n","/home/tis-79/Documents/InHouseProjects/Sheygram/SheyGramOfficeDevelopment/client/src/Components/Posts.js",["84","85","86","87","88","89","90"],"import React, { useEffect, useState } from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport \"../index.css\";\nimport moment from \"moment\";\nimport {\n  HeartFilled,\n  CommentOutlined,\n  DeleteOutlined,\n  EditOutlined,\n} from \"@ant-design/icons\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  addComment,\n  EditPost,\n  getAllPost,\n  likeorunlikepost,\n  deletePost\n} from \"../Redux/action/postAction\";\nimport { Col, Modal, Row, Input } from \"antd\";\n\nconst { TextArea } = Input;\n\nconst Posts = ({ post, postInProfilePage }) => {\n  const [addCommentModal, setaddCommentModal] = useState(false);\n  const [addEditModal, setaddEditModal] = useState(false);\n  const [description, setDescription] = useState(post.description);\n\n  const [comment, setcomment] = useState(\"\");\n  const dispatch = useDispatch();\n  const { likeorunlikeloading,addcommentloading,deleteloading } = useSelector((state) => state.alertsReducers);\n  const { users } = useSelector((state) => state.userReducers);\n  const currentUser = JSON.parse(localStorage.getItem(\"user\"));\n  const alreadyLiked = post.likes.find(\n    (obj) => obj.user.toString() === currentUser._id\n  );\n\n  const modalHandler = () => {\n    setaddCommentModal(true);\n  };\n  useEffect(() => {\n    dispatch(getAllPost());\n  }, [likeorunlikeloading,addcommentloading,deleteloading]);\n\n  return (\n    <div className=\"bs1 p-2 mt-3\">\n      <div className=\"d-flex justify-content-between align-items-center bs-1\">\n        <div className=\"d-flex align-items-center\">\n          {post.user.profilepicUrl === \"\" ? (\n            <span className=\"profilepic1\">{post.user.username[0]}</span>\n          ) : (\n            <img\n              src={post.user.profilepicUrl}\n              alt=\"\"\n              height=\"35\"\n              width=\"35\"\n              style={{ borderRadius: \"50%\" }}\n            />\n          )}\n          <NavLink to=\"\" className=\"ml-2\">\n            {post.user.username}\n          </NavLink>\n        </div>\n        <div>\n          <p>{moment(post.createdAt).format(\"MMM DD yyyy\")}</p>\n        </div>\n      </div>\n      <img\n        src={post.image}\n        alt=\"\"\n        className=\"postimage w-100\"\n        style={{\n          height: postInProfilePage == true && \"200px\",\n          borderRadius: \"2%\",\n        }}\n      />\n      <p className=\" mt-1 mb-1 text-left\">{post.description}</p>\n      <div\n        className={\n          postInProfilePage == true\n            ? \"d-flex align-items-center justify-content-between\"\n            : \"d-flex align-items-center\"\n        }\n      >\n        <div className=\"d-flex align-items-center\">\n          <HeartFilled\n            style={{ color: alreadyLiked ? \"red\" : \"grey\" }}\n            onClick={() => dispatch(likeorunlikepost({ postId: post._id }))}\n          />\n          <p>{post.likes.length}</p>\n        </div>\n        <div className=\"d-flex align-items-center\">\n          <CommentOutlined onClick={modalHandler} />\n          <p>{post.comments.length}</p>\n        </div>\n\n        {post.user._id === currentUser._id && postInProfilePage == true && (\n          <>\n            <div>\n              <DeleteOutlined onClick={() => dispatch(deletePost({postId : post._id}))} />\n            </div>\n            <div>\n              <EditOutlined onClick={() => setaddEditModal(true)} />\n            </div>\n          </>\n        )}\n      </div>\n\n      <Modal\n        visible={addCommentModal}\n        title=\"Commnets\"\n        closable={false}\n        width={900}\n        okText=\"Add Commnet\"\n        onOk={() => {\n          dispatch(addComment({ postId: post._id, comments: comment }));\n          setaddCommentModal(false);\n        }}\n        onCancel={() => {\n          setaddCommentModal(false);\n        }}\n      >\n        <Row>\n          <Col lg={13} xs={0}>\n            <img src={post.image} height=\"400\" className=\"w-100\" />\n          </Col>\n\n          <Col lg={11} xs={24}>\n            <TextArea\n              value={comment}\n              placeholder=\"add your comment here\"\n              className=\"ml-2\"\n              onChange={(e) => setcomment(e.target.value)}\n              rows=\"8\"\n              t\n            />\n\n            {post.comments.map((comment) => {\n              const user = users.find((obj) => obj._id === comment.user);\n              // console.log(user)\n              return (\n                <div className=\"d-flex align-items-center\">\n                  {/* {user.profilepicUrl === \"\" ? (\n                    <span className=\"profilepic1\">{user.username[0]}</span>\n                  ) : (\n                    <img src={user.profilepicUrl} alt=\"\" />\n                  )} */}\n                  {/* <Link to=''>{user.username}</Link> */}\n                  <p style={{ fontSize: 15 }}>{comment.comments}</p>\n                  <p style={{ fontSize: 15 }}>{comment.date}</p>\n                </div>\n              );\n            })}\n          </Col>\n        </Row>\n      </Modal>\n      <Modal\n        title=\"Edit Description\"\n        closable={false}\n        okText=\"edit\"\n        onOk={() => {\n          dispatch(\n            EditPost({\n              postId: post._id,\n              editedDescription: description,\n            })\n          );\n            setaddEditModal(false);\n        }}\n        visible={addEditModal}\n        onCancel={() => setaddEditModal(false)}\n      >\n        <Input\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n      </Modal>\n    </div>\n  );\n};\n\nexport default Posts;\n",{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":21,"column":9,"nodeType":"97","messageId":"98","endLine":21,"endColumn":19},{"ruleId":"99","severity":1,"message":"100","line":31,"column":6,"nodeType":"101","endLine":31,"endColumn":8,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":35,"column":6,"nodeType":"101","endLine":35,"endColumn":8,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":58,"column":21,"nodeType":"106","endLine":58,"endColumn":54},{"ruleId":"99","severity":1,"message":"103","line":26,"column":6,"nodeType":"101","endLine":26,"endColumn":38,"suggestions":"107"},{"ruleId":"95","severity":1,"message":"108","line":1,"column":10,"nodeType":"97","messageId":"98","endLine":1,"endColumn":22},{"ruleId":"95","severity":1,"message":"109","line":8,"column":3,"nodeType":"97","messageId":"98","endLine":8,"endColumn":17},{"ruleId":"95","severity":1,"message":"110","line":2,"column":10,"nodeType":"97","messageId":"98","endLine":2,"endColumn":14},{"ruleId":"99","severity":1,"message":"103","line":42,"column":6,"nodeType":"101","endLine":42,"endColumn":59,"suggestions":"111"},{"ruleId":"112","severity":1,"message":"113","line":72,"column":37,"nodeType":"114","messageId":"115","endLine":72,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":79,"column":29,"nodeType":"114","messageId":"115","endLine":79,"endColumn":31},{"ruleId":"112","severity":1,"message":"113","line":96,"column":65,"nodeType":"114","messageId":"115","endLine":96,"endColumn":67},{"ruleId":"116","severity":1,"message":"117","line":124,"column":13,"nodeType":"118","endLine":124,"endColumn":68},{"ruleId":"95","severity":1,"message":"119","line":138,"column":21,"nodeType":"97","messageId":"98","endLine":138,"endColumn":25},"no-native-reassign",["120"],"no-negated-in-lhs",["121"],"no-unused-vars","'parsedUser' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'user'. Either include them or remove the dependency array.","ArrayExpression",["122"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["123"],"Assignments to the 'logoutTimer' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression",["124"],"'AutoComplete' is defined but never used.","'UploadOutlined' is defined but never used.","'Link' is defined but never used.",["125"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'user' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},"Update the dependencies array to be: [dispatch, user]",{"range":"134","text":"135"},"Update the dependencies array to be: [dispatch]",{"range":"136","text":"137"},"Update the dependencies array to be: [dispatch, followloading, unfollowloading]",{"range":"138","text":"139"},"Update the dependencies array to be: [likeorunlikeloading, addcommentloading, deleteloading, dispatch]",{"range":"140","text":"141"},[1068,1070],"[dispatch, user]",[1128,1130],"[dispatch]",[915,947],"[dispatch, followloading, unfollowloading]",[1291,1344],"[likeorunlikeloading, addcommentloading, deleteloading, dispatch]"]